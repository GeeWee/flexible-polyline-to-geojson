(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))g(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const h of s.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&g(h)}).observe(document,{childList:!0,subtree:!0});function u(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function g(o){if(o.ep)return;o.ep=!0;const s=u(o);fetch(o.href,s)}})();var O,C;function D(){if(C)return O;C=1;const p=5,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",u=[62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],g=1,o=0,s=1,h=2,v=3,n=typeof BigInt<"u"?BigInt:Number;function A(r){const e=P(r),t=B(e[0],e[1]),i=10**t.precision,d=10**t.thirdDimPrecision,{thirdDim:a}=t;let m=0,f=0,E=0;const y=[];let c=2;for(;c<e.length;){const L=N(e[c])/i,w=N(e[c+1])/i;if(m+=L,f+=w,a){const I=N(e[c+2])/d;E+=I,y.push([m,f,E]),c+=3}else y.push([m,f]),c+=2}if(c!==e.length)throw new Error("Invalid encoding. Premature ending reached");return{...t,polyline:y}}function F(r){const e=r.charCodeAt(0);return u[e-45]}function P(r){let e=n(0),t=n(0);const i=[];if(r.split("").forEach(d=>{const a=n(F(d));e|=(a&n(31))<<t,(a&n(32))===n(0)?(i.push(e),e=n(0),t=n(0)):t+=n(5)}),t>0)throw new Error("Invalid encoding");return i}function B(r,e){if(+r.toString()!==g)throw new Error("Invalid format version");const t=+e.toString(),i=t&15,d=t>>4&7,a=t>>7&15;return{precision:i,thirdDim:d,thirdDimPrecision:a}}function N(r){let e=r;return e&n(1)&&(e=~e),e>>=n(1),+e.toString()}function T({precision:r=p,thirdDim:e=o,thirdDimPrecision:t=0,polyline:i}){const d=10**r,a=10**t,m=V(r,e,t),f=[];let E=n(0),y=n(0),c=n(0);return i.forEach(L=>{const w=n(Math.round(L[0]*d));f.push(x(w-E)),E=w;const I=n(Math.round(L[1]*d));if(f.push(x(I-y)),y=I,e){const S=n(Math.round(L[2]*a));f.push(x(S-c)),c=S}}),[...m,...f].join("")}function V(r,e,t){if(r<0||r>15)throw new Error("precision out of range. Should be between 0 and 15");if(t<0||t>15)throw new Error("thirdDimPrecision out of range. Should be between 0 and 15");if(e<0||e>7||e===4||e===5)throw new Error("thirdDim should be between 0, 1, 2, 3, 6 or 7");const i=t<<7|e<<4|r;return b(g)+b(i)}function b(r){let e="",t=n(r);for(;t>31;){const i=t&n(31)|n(32);e+=l[i],t>>=n(5)}return e+l[t]}function x(r){let e=n(r);const t=e<0;return e<<=n(1),t&&(e=~e),b(e)}return O={encode:T,decode:A,ABSENT:o,LEVEL:s,ALTITUDE:h,ELEVATION:v},O}var M=D();document.getElementById("convert-button").addEventListener("click",()=>{const p=document.getElementById("flex-polyline").value.trim(),l=document.getElementById("geojson-output");if(!p){l.textContent="Please provide a valid flexible polyline.";return}try{const u=p.startsWith("[")?JSON.parse(p):[p];if(!Array.isArray(u)||u.some(s=>typeof s!="string"))throw new Error("Input must be a single polyline or an array of polyline strings.");const o={type:"FeatureCollection",features:u.map(s=>({type:"Feature",geometry:{type:"LineString",coordinates:M.decode(s).polyline.map(([v,n])=>[n,v])},properties:{}}))};l.textContent=JSON.stringify(o,null,2)}catch(u){l.textContent=`Error decoding polyline(s): ${u.message}`}});
